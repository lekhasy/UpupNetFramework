@model Upup.Models.Product
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script>
    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = 'https://connect.facebook.net/vi_VN/sdk.js#xfbml=1&version=v2.10&appId=179668149113779';
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));</script>

<div id="productDetail">
    <div class="row">
        <div class="col-md-8">
            <canvas id="the-canvas" style="border:1px solid black; width:100%;" />
        </div>
        <div class="col-md-4">

            <div class="order-suggest form-group">

                <div class="row">
                    <div class="col-md-8"><label>Mã sản phẩm</label></div>
                    <div class="col-md-4"><label>Số lượng</label></div>
                </div>
                <div class="row">
                    <div class="col-md-8"><input type="text" class="form-control" value="@Model.Code" disabled /></div>
                    <div class="col-md-4"><input type="text" class="form-control" /></div>
                </div>
                <div class="row">
                    <div class="col-md-12 text-right"><button class="btn btn-success">Kiểm tra</button></div>
                </div>
                <div class="row">
                    <div class="col-md-5"><label>Đơn giá</label></div>
                    <div class="col-md-7"><input type="text" class="form-control" value="" disabled /></div>
                </div>
                <div class="row">
                    <div class="col-md-5"><label>Số lượng</label></div>
                    <div class="col-md-7"><input type="text" class="form-control" /></div>
                </div>
                <div class="row">
                    <div class="col-md-5"><label>Tổng tiền</label></div>
                    <div class="col-md-7"><input type="text" class="form-control" disabled /></div>
                </div>
                <div class="row">
                    <div class="col-md-5"><label>Ngày giao hàng</label></div>
                    <div class="col-md-7"><input type="text" class="form-control" disabled /></div>
                </div>
                <div class="row">
                    <div class="col-md-6 text-center"><button class="btn btn-primary">Đặt hàng nhanh</button></div>
                    <div class="col-md-6 text-center"><button class="btn btn-primary">Cho vào đơn hàng</button></div>
                </div>
            </div>
            <div class="text-center"><button class="btn btn-danger">Quản lý đơn hàng</button></div>

        </div>
    </div>
</div>

<div class="arae-facebook">
    <div class="fb-share-button" data-href="http://localhost/Product/Index/1" data-layout="button_count" data-size="large" data-mobile-iframe="true"><a class="fb-xfbml-parse-ignore" target="_blank" href="https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Flocalhost%2FProduct%2FIndex%2F1&amp;src=sdkpreparse">Chia sẻ</a></div>
    <div class="fb-comments" data-href="http://localhost/product/index/1" data-numposts="10"></div>
</div>

@section scripts{
    <script>
            $(function () {
                // Fetch the PDF document from the URL using promises.
                PDFJS.getDocument('@Model.PdfUrl').then(function (pdf) {
                    // Fetch the page.
                    pdf.getPage(1).then(function (page) {
                        var scale = 1.0;
                        var viewport = page.getViewport(scale);

                        // Prepare canvas using PDF page dimensions.
                        var canvas = document.getElementById('the-canvas');
                        var context = canvas.getContext('2d');
                        canvas.height = viewport.height;
                        canvas.width = viewport.width;

                        // Render PDF page into canvas context.
                        var renderContext = {
                            canvasContext: context,
                            viewport: viewport
                        };
                        page.render(renderContext);
                    });
                });
            });
    </script>
}