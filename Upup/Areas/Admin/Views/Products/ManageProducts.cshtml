
@{
    ViewBag.Title = "ManageProducts";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@using Upup.Helpers
@model Upup.Areas.Admin.ViewModels.ProductModel

@section AddCssToHead
{
    <link href="@Url.Content("~/Content/dropzone.min.css")" rel="stylesheet" type="text/css" />
}

<section class="content-header">
    <h1>
        Quản lý Sản phẩm
        <small>Preview</small>
        <a class="btn-sm btn-success" href="@Url.Action("ManageProducts","Products")">Tạo mới sản phẩm</a>
    </h1>
    <ol class="breadcrumb">
        <li>@Html.ActionSiteMap("ProductsConsole", "Products", null, "Tổng quan", new { @class = "fa fa-dashboard" })</li>
        <li class="active">Quản lý Sản phẩm</li>
    </ol>
</section>

@using (Html.BeginForm("ManageProducts", "Products", FormMethod.Post, new { id = "insertForm" }))
{
    <section class="content">
        <div class="box box-primary">
            <!-- form start -->
            <form role="form">
                <div class="box-body">
                    @Html.HiddenFor(n => n.Id)
                    <div class="form-group">
                        @Html.LabelFor(n => n.Category_Id)
                        @Html.DropDownListFor(n => n.Category_Id, Model.Categories, new
                   {
                       @class = "form-control",
                       @required = "required",
                       @data_errormessage_value_missing = "Vui lòng chọn danh mục"
                   })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(n => n.Code)
                        @Html.TextBoxFor(n => n.Code, new
                   {
                       @class = "form-control",
                       @placeholder = "Nhập mã Sản phẩm",
                       @required = "required",
                       @data_errormessage_value_missing = "Vui lòng điền mã Sản phẩm"
                   })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(n => n.Name)
                        @Html.TextBoxFor(n => n.Name, new
                   {
                       @class = "form-control",
                       @placeholder = "Nhập tên Sản phẩm",
                       @required = "required",
                       @data_errormessage_value_missing = "Vui lòng điền tên Sản phẩm"
                   })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(n => n.Name_en)
                        @Html.TextBoxFor(n => n.Name_en, new
                   {
                       @class = "form-control",
                       @placeholder = "Nhập tên Sản phẩm tiếng anh",
                       @required = "required",
                       @data_errormessage_value_missing = "Vui lòng điền tên Sản phẩm tiếng anh"
                   })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(p => p.ImageUrl)
                        @if (Model != null && !string.IsNullOrEmpty(Model.ImageUrl))
                        {
                            <img src="/Images/Products/@Model.ImageUrl" alt="@Model.Name" width="150" />
                        }
                        <button type="button" class="btn btn-primary upload" data-toggle="modal" data-target=".single-img">Upload Image</button>
                        @Html.HiddenFor(p => p.ImageUrl)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(p => p.PdfUrl)
                        <button type="button" class="btn btn-primary upload" data-toggle="modal" data-target=".single-file">Upload File</button>
                        @Html.HiddenFor(p => p.PdfUrl)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(n => n.Price)
                        @Html.TextBoxFor(n => n.Price, new
                   {
                       @class = "form-control",
                       @placeholder = "Nhập giá",
                       @required = "required",
                       @data_errormessage_value_missing = "Vui lòng điền giá Sản phẩm"
                   })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(n => n.OnHand)
                        @Html.TextBoxFor(n => n.OnHand, new
                   {
                       @class = "form-control",
                       @placeholder = "Nhập số lượng tồn kho",
                       @required = "required",
                       @data_errormessage_value_missing = "Vui lòng nhập số lượng tồn kho"
                   })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(n => n.MetaDescription)
                        @Html.TextBoxFor(n => n.MetaDescription, new
                   {
                       @class = "form-control",
                       @placeholder = "Nhập mô tả cho trang",
                       @required = "required",
                       @data_errormessage_value_missing = "Vui lòng điền mô tả trang"
                   })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(n => n.MetaKeyword)
                        @Html.TextBoxFor(n => n.MetaKeyword, new
                   {
                       @class = "form-control",
                       @placeholder = "Nhập từ khỏa cho trang",
                       @required = "required",
                       @data_errormessage_value_missing = "Vui lòng điền từ khóa trang"
                   })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(n => n.MetaDescription_en)
                        @Html.TextBoxFor(n => n.MetaDescription_en, new
                   {
                       @class = "form-control",
                       @placeholder = "Nhập mô tả tiếng anh cho trang",
                       @required = "required",
                       @data_errormessage_value_missing = "Vui lòng điền mô tả tiếng anh cho trang"
                   })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(n => n.MetaKeyword_en)
                        @Html.TextBoxFor(n => n.MetaKeyword_en, new
                   {
                       @class = "form-control",
                       @placeholder = "Nhập từ khỏa tiếng anh cho trang",
                       @required = "required",
                       @data_errormessage_value_missing = "Vui lòng điền từ khóa tiếng anh cho trang"
                   })
                    </div>
                </div><!-- /.box-body -->

                <div class="box-footer">
                    <button type="submit" class="btn btn-primary">Xác nhận</button>
                </div>
            </form>
        </div>
    </section>
}

<div class="modal fade bs-example-modal-sm single-img" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button aria-label="Close" data-dismiss="modal" class="close" type="button"><span aria-hidden="true">×</span></button>
                <h4 id="myLargeModalLabel" class="modal-title">Upload Single Image</h4>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("SaveUploadedFile", "Upload", new { id="Products", folderName = "Products"})" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm">
                    <div class="fallback">
                        <input name="file" type="file" multiple />
                        <input type="submit" value="Upload" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm single-file" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button aria-label="Close" data-dismiss="modal" class="close" type="button"><span aria-hidden="true">×</span></button>
                <h4 id="myLargeModalLabel" class="modal-title">Upload Single File</h4>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("SaveUploadedFile", "Upload", new { id="Products", folderName = "ProductFiles"})" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm2">
                    <div class="fallback">
                        <input name="file" type="file" multiple />
                        <input type="submit" value="Upload" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<section class="content">
    <div class="box">
        <div class="box-header">
            <h3 class="box-title">Dữ liệu Sản phẩm</h3>
        </div><!-- /.box-header -->
        <div class="box-body">
            <table id="example1" class="table table-bordered table-striped display">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Tên Sản phẩm</th>
                        <th>Tên Sản phẩm tiếng anh</th>
                        <th>Giá</th>
                        <th>Hình ảnh</th>
                        <th>Tùy chỉnh</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div><!-- /.box-body -->
    </div><!-- /.box -->
</section>

@section AddScriptToBody{
    <script src="@Url.Content("~/Scripts/dropzone.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(function() {
            Dropzone.options.dropzoneForm = {
                maxFiles: 1,
                init: function() {
                    this.on("success", function(file) {

                        // Create the remove button
                        var removeButton = Dropzone.createElement("<button class='btn btn-danger'>Remove file</button>");

                        // Capture the Dropzone instance as closure.
                        var _this = this;
                        var filePath = arguments[1].FilePath;

                        // Listen to the click event
                        removeButton.addEventListener("click", function(e) {
                            // Make sure the button click doesn't submit the form:
                            e.preventDefault();
                            e.stopPropagation();
                            // Remove the file preview.
                            _this.removeFile(file);
                            // If you want to the delete the file on the server as well,
                            // you can do the AJAX request here.
                            $.ajax({
                                url: '@Url.Action("DeleteUploadedFile", "Upload", new {id = "Products"})',
                                type: 'POST',
                                data: {
                                    filePath: filePath
                                }
                            });
                        });

                        // Add the button to the file preview element.
                        file.previewElement.appendChild(removeButton);
                        $("#ImageUrl").val(arguments[1].Message);
                    });
                }
            };

            Dropzone.options.dropzoneForm2 = {
                maxFiles: 1,
                init: function() {
                    this.on("success", function(file) {

                        // Create the remove button
                        var removeButton = Dropzone.createElement("<button class='btn btn-danger'>Remove file</button>");

                        // Capture the Dropzone instance as closure.
                        var _this = this;
                        var filePath = arguments[1].FilePath;

                        // Listen to the click event
                        removeButton.addEventListener("click", function(e) {
                            // Make sure the button click doesn't submit the form:
                            e.preventDefault();
                            e.stopPropagation();
                            // Remove the file preview.
                            _this.removeFile(file);
                            // If you want to the delete the file on the server as well,
                            // you can do the AJAX request here.
                            $.ajax({
                                url: '@Url.Action("DeleteUploadedFile", "Upload", new {id = "Products"})',
                                type: 'POST',
                                data: {
                                    filePath: filePath
                                }
                            });
                        });

                        // Add the button to the file preview element.
                        file.previewElement.appendChild(removeButton);
                        $("#FileUrl").val(arguments[1].Message);
                    });
                }
            };

            $('#IdCategory').change(function () {
                var $this = $(this);
                if ($this.find('option').is(':selected')) {
                    $('#CategoryName').val($this.find('option[value=' + $this.val() + ']').text());
                }
            });

            $("button[type='submit']").click(function() {
                var messageLength = CKEDITOR.instances.Summary.getData().replace(/<[^>]*>/gi, '').length;
                if (!messageLength && $("#IdCategory").val() !== '' && $("#Name").val() !== '' && $("#Author").val() !== '') {
                    AlertBootstrap('Vui lòng viết vài dòng tóm lượt');
                    return false;
                }
                return true;
            });

            var $table = $("#example1").DataTable({
                "language": {
                    "lengthMenu": "Hiển thị _MENU_ dòng dữ liệu cho mỗi trang",
                    "search": "Tìm kiếm: ",
                    "zeroRecords": "Xin lỗi - Không tìm thấy kết quả nào",
                    "info": "Đang hiển thị trang _PAGE_ trên tổng số _PAGES_ trang",
                    "infoEmpty": "Dữ liệu không tồn tại",
                    "infoFiltered": "(đã lọc được _MAX_ trên tổng sô dữ liệu)",
                    "paginate": {
                        "first": "Trang đầu",
                        "last": "Trang cuối",
                        "previous": "Trang trước",
                        "next": "Trang sau"
                    }
                },
                "serverSide": true,
                "ajaxSource": "/Products/LoadAllProducts",
                "processing": true,
                "columns": [
                    {
                        "name": "ID",
                        "class": "data-id"
                    },
                    { "name": "CategoryName" },
                    {
                        "name": "Name",
                        "sortable": false
                    },
                    {
                        "name": "ImageUrl",
                        "sortable": false
                    },
                    { "name": "AuthorName" },
                    {
                        "name": "ID",
                        "targets": 5,
                        "searchable": false,
                        "sortable": false,
                        "width": 90,
                        "render": function(data, type, full, meta) {
                            return '<a href=\"/Admin/Products/ManageProducts/' + data + '\" class="btn btn-success btn-xs"><i class="fa fa-edit fa-lg"></i> &nbsp;Sửa</a>  <a href=\"javascript:void(0)\" data-id="' + data + '" class="btn btn-danger btn-xs act-del" data-toggle="confirmation"><i class="fa fa-trash-o fa-lg"></i> &nbsp;Xóa</a>';
                        }
                    }
                ],
                "drawCallback": function(settings) {
                    $(".act-del").click(function() {
                        var id = $(this).attr('data-id');
                        BootstrapDialog.confirm({
                            title: 'Tin nhắn',
                            message: 'Bạn thật sự muốn xóa Sản phẩm này ?',
                            //type: BootstrapDialog.TYPE_INFO, // <-- Default value is BootstrapDialog.TYPE_PRIMARY
                            closable: true, // <-- Default value is false
                            draggable: true, // <-- Default value is false
                            btnCancelLabel: 'Hủy', // <-- Default value is 'Cancel',
                            btnOKLabel: 'Chấp nhận!', // <-- Default value is 'OK',
                            //btnOKClass: 'btn-info', // <-- If you didn't specify it, dialog type will be used,
                            callback: function(result) {
                                // result will be true if button was click, while it will be false if users close the dialog directly.
                                if (result) {
                                    $.post('/Products/RemoveProducts', { 'id': parseInt(id, 10) },
                                        function(data) {
                                            if (data.ResultValue) {
                                                BootstrapDialog.show({
                                                    type: BootstrapDialog.TYPE_SUCCESS,
                                                    title: 'Thành công',
                                                    message: data.Message
                                                });
                                            } else {
                                                BootstrapDialog.show({
                                                    type: BootstrapDialog.TYPE_DANGER,
                                                    title: 'Thất bại',
                                                    message: data.Message
                                                });
                                            }
                                            $table.ajax.reload();
                                            setTimeout(function() {
                                                BootstrapDialog.closeAll();
                                            }, 5000);
                                        }
                                    );
                                }
                            }
                        });
                    });
                }
            });
        });
    </script>
}

