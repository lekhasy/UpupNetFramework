
@{
    ViewBag.Title = "ManageSettings";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@model Upup.Areas.Admin.ViewModels.SettingModel

@section AddCssToHead
{
    <link href="@Url.Content("~/Content/dropzone.min.css")" rel="stylesheet" type="text/css" />
}
@using (Html.BeginForm("ManageSettings", "Settings", FormMethod.Post))
{
    <div class="manage-setting">
        <section class="content-header">
            <button type="submit" class="btn btn-primary pull-right">Lưu cấu hình</button>
            <h1>Cấu hình Website</h1>
        </section>
        <div class="row">
            <div class="col-md-6">
                <section class="content">
                    <div class="box box-primary">
                        <!-- form start -->
                        <div class="box-body">
                            <div class="form-group">
                                <img src="~/Images/Settings/@Model.LogoUrl" class="pull-right" width="60" />
                                @Html.LabelFor(p => p.LogoUrl)
                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target=".single-img">Upload Image</button>
                                @Html.HiddenFor(p => p.LogoUrl)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.MainSlogan1)
                                @Html.TextBoxFor(n => n.MainSlogan1, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập số biểu ngữ cho banner chính 1"
                           })
                            </div>
                            <div class="form-group">
                                <img src="~/Images/Settings/@Model.MainBannerUrl1" class="pull-right" width="60" />
                                @Html.LabelFor(p => p.MainBannerUrl1)
                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target=".main-banner">Upload Image</button>
                                @Html.HiddenFor(p => p.MainBannerUrl1)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.MainSlogan2)
                                @Html.TextBoxFor(n => n.MainSlogan2, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập số biểu ngữ cho banner chính 2"
                           })
                            </div>
                            <div class="form-group">
                                <img src="~/Images/Settings/@Model.MainBannerUrl2" class="pull-right" width="60" />
                                @Html.LabelFor(p => p.MainBannerUrl2)
                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target=".main-banner2">Upload Image</button>
                                @Html.HiddenFor(p => p.MainBannerUrl2)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.MainSlogan3)
                                @Html.TextBoxFor(n => n.MainSlogan3, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập số biểu ngữ cho banner chính 3"
                           })
                            </div>
                            <div class="form-group">
                                <img src="~/Images/Settings/@Model.MainBannerUrl3" class="pull-right" width="60" />
                                @Html.LabelFor(p => p.MainBannerUrl3)
                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target=".main-banner3">Upload Image</button>
                                @Html.HiddenFor(p => p.MainBannerUrl3)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.MainSlogan4)
                                @Html.TextBoxFor(n => n.MainSlogan4, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập số biểu ngữ cho banner chính 4"
                           })
                            </div>
                            <div class="form-group">
                                <img src="~/Images/Settings/@Model.MainBannerUrl4" class="pull-right" width="60" />
                                @Html.LabelFor(p => p.MainBannerUrl4)
                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target=".main-banner4">Upload Image</button>
                                @Html.HiddenFor(p => p.MainBannerUrl4)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.Phone)
                                @Html.TextBoxFor(n => n.Phone, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập số điện thoại công ty"
                           })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.Fax)
                                @Html.TextBoxFor(n => n.Fax, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập số fax công ty"
                           })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.Email)
                                @Html.TextBoxFor(n => n.Email, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập email công ty"
                           })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.WorkTime)
                                @Html.TextBoxFor(n => n.WorkTime, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập giờ làm việc của công ty"
                           })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.Slogan)
                                @Html.TextBoxFor(n => n.Slogan, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập khẩu hiệu cho công ty"
                           })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.Slogan_en)
                                @Html.TextBoxFor(n => n.Slogan_en, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập khẩu hiệu tiếng anh cho công ty"
                           })
                            </div>
                        </div><!-- /.box-body -->
                    </div>
                </section>
            </div>
            <div class="col-md-6">
                <section class="content">
                    <div class="box box-primary">
                        <!-- form start -->
                        <div class="box-body">
                            <div class="form-group">
                                <img src="~/Images/Settings/@Model.TechBannerUrl" class="pull-right" width="60" />
                                @Html.LabelFor(p => p.TechBannerUrl)
                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target=".tech-img">Upload Image</button>
                                @Html.HiddenFor(p => p.TechBannerUrl)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.TechSlogan)
                                @Html.TextBoxFor(n => n.TechSlogan, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập biểu ngữ cho trang công nghệ"
                           })
                            </div>
                            <div class="form-group">
                                <img src="~/Images/Settings/@Model.GuideBannerUrl" class="pull-right" width="60" />
                                @Html.LabelFor(p => p.GuideBannerUrl)
                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target=".guide-img">Upload Image</button>
                                @Html.HiddenFor(p => p.GuideBannerUrl)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.GuideSlogan)
                                @Html.TextBoxFor(n => n.GuideSlogan, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập biểu ngữ cho trang hướng dẫn"
                           })
                            </div>
                            <div class="form-group">
                                <img src="~/Images/Settings/@Model.EventBannerUrl" class="pull-right" width="60" />
                                @Html.LabelFor(p => p.EventBannerUrl)
                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target=".event-img">Upload Image</button>
                                @Html.HiddenFor(p => p.EventBannerUrl)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.EventSlogan)
                                @Html.TextBoxFor(n => n.EventSlogan, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập biểu ngữ cho trang sự kiện"
                           })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.CompanyName)
                                @Html.TextBoxFor(n => n.CompanyName, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập tên công ty"
                           })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.MetaKeyword)
                                @Html.TextBoxFor(n => n.MetaKeyword, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập từ khóa cho website"
                           })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.MetaKeyword_en)
                                @Html.TextBoxFor(n => n.MetaKeyword_en, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập từ khóa tiếng anh cho website"
                           })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.MetaDescription)
                                @Html.TextBoxFor(n => n.MetaDescription, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập mô tả cho website"
                           })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.MetaDescription_en)
                                @Html.TextBoxFor(n => n.MetaDescription_en, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập mô tả tiếng anh cho website"
                           })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.FacebookLink)
                                @Html.TextBoxFor(n => n.FacebookLink, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập link Facebook"
                           })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.Twitter)
                                @Html.TextBoxFor(n => n.Twitter, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập link Twitter"
                           })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.GooglePlus)
                                @Html.TextBoxFor(n => n.GooglePlus, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập link Google Plus"
                           })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(n => n.YoutubeLink)
                                @Html.TextBoxFor(n => n.YoutubeLink, new
                           {
                               @class = "form-control",
                               @placeholder = "Nhập link Youtube"
                           })
                            </div>
                        </div><!-- /.box-body -->
                    </div>
                </section>
            </div>
        </div>
    </div>
}

<div class="modal fade bs-example-modal-sm single-img" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button aria-label="Close" data-dismiss="modal" class="close" type="button"><span aria-hidden="true">×</span></button>
                <h4 id="myLargeModalLabel" class="modal-title">Upload Single Image</h4>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("SaveUploadedFile", "Upload", new { id="admin", folderName = "Settings"})" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm">
                    <div class="fallback">
                        <input name="file" type="file" multiple />
                        <input type="submit" value="Upload" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm main-banner" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button aria-label="Close" data-dismiss="modal" class="close" type="button"><span aria-hidden="true">×</span></button>
                <h4 id="myLargeModalLabel" class="modal-title">Upload Single Image</h4>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("SaveUploadedFile", "Upload", new { id="admin", folderName = "Settings"})" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm5">
                    <div class="fallback">
                        <input name="file" type="file" multiple />
                        <input type="submit" value="Upload" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm main-banner2" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button aria-label="Close" data-dismiss="modal" class="close" type="button"><span aria-hidden="true">×</span></button>
                <h4 id="myLargeModalLabel" class="modal-title">Upload Single Image</h4>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("SaveUploadedFile", "Upload", new { id="admin", folderName = "Settings"})" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm6">
                    <div class="fallback">
                        <input name="file" type="file" multiple />
                        <input type="submit" value="Upload" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm main-banner3" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button aria-label="Close" data-dismiss="modal" class="close" type="button"><span aria-hidden="true">×</span></button>
                <h4 id="myLargeModalLabel" class="modal-title">Upload Single Image</h4>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("SaveUploadedFile", "Upload", new { id="admin", folderName = "Settings"})" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm7">
                    <div class="fallback">
                        <input name="file" type="file" multiple />
                        <input type="submit" value="Upload" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm main-banner4" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button aria-label="Close" data-dismiss="modal" class="close" type="button"><span aria-hidden="true">×</span></button>
                <h4 id="myLargeModalLabel" class="modal-title">Upload Single Image</h4>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("SaveUploadedFile", "Upload", new { id="admin", folderName = "Settings"})" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm8">
                    <div class="fallback">
                        <input name="file" type="file" multiple />
                        <input type="submit" value="Upload" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm tech-img" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button aria-label="Close" data-dismiss="modal" class="close" type="button"><span aria-hidden="true">×</span></button>
                <h4 id="myLargeModalLabel" class="modal-title">Upload Single Image</h4>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("SaveUploadedFile", "Upload", new { id="admin", folderName = "Settings"})" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm2">
                    <div class="fallback">
                        <input name="file" type="file" multiple />
                        <input type="submit" value="Upload" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm guide-img" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button aria-label="Close" data-dismiss="modal" class="close" type="button"><span aria-hidden="true">×</span></button>
                <h4 id="myLargeModalLabel" class="modal-title">Upload Single Image</h4>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("SaveUploadedFile", "Upload", new { id="admin", folderName = "Settings"})" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm3">
                    <div class="fallback">
                        <input name="file" type="file" multiple />
                        <input type="submit" value="Upload" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm event-img" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button aria-label="Close" data-dismiss="modal" class="close" type="button"><span aria-hidden="true">×</span></button>
                <h4 id="myLargeModalLabel" class="modal-title">Upload Single Image</h4>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("SaveUploadedFile", "Upload", new { id="admin", folderName = "Settings"})" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm4">
                    <div class="fallback">
                        <input name="file" type="file" multiple />
                        <input type="submit" value="Upload" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section AddScriptToBody
{
    <script src="@Url.Content("~/Scripts/dropzone.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            Dropzone.options.dropzoneForm = {
                maxFiles: 1,
                init: function () {
                    this.on("success", function (file) {

                        // Create the remove button
                        var removeButton = Dropzone.createElement("<button class='btn btn-danger'>Remove file</button>");

                        // Capture the Dropzone instance as closure.
                        var _this = this;
                        var filePath = arguments[1].FilePath;

                        // Listen to the click event
                        removeButton.addEventListener("click", function (e) {
                            // Make sure the button click doesn't submit the form:
                            e.preventDefault();
                            e.stopPropagation();
                            // Remove the file preview.
                            _this.removeFile(file);
                            // If you want to the delete the file on the server as well,
                            // you can do the AJAX request here.
                            $.ajax({
                                url: '@Url.Action("DeleteUploadedFile", "Upload", new {id = "admin"})',
                                type: 'POST',
                                data: {
                                    filePath: filePath
                                }
                            });
                        });

                        // Add the button to the file preview element.
                        file.previewElement.appendChild(removeButton);
                        $("#LogoUrl").val(arguments[1].Message);
                    });
                }
            };
            Dropzone.options.dropzoneForm2 = {
                maxFiles: 1,
                init: function () {
                    this.on("success", function (file) {

                        // Create the remove button
                        var removeButton = Dropzone.createElement("<button class='btn btn-danger'>Remove file</button>");

                        // Capture the Dropzone instance as closure.
                        var _this = this;
                        var filePath = arguments[1].FilePath;

                        // Listen to the click event
                        removeButton.addEventListener("click", function (e) {
                            // Make sure the button click doesn't submit the form:
                            e.preventDefault();
                            e.stopPropagation();
                            // Remove the file preview.
                            _this.removeFile(file);
                            // If you want to the delete the file on the server as well,
                            // you can do the AJAX request here.
                            $.ajax({
                                url: '@Url.Action("DeleteUploadedFile", "Upload", new {id = "admin"})',
                                type: 'POST',
                                data: {
                                    filePath: filePath
                                }
                            });
                        });

                        // Add the button to the file preview element.
                        file.previewElement.appendChild(removeButton);
                        $("#TechBannerUrl").val(arguments[1].Message);
                    });
                }
            };
            Dropzone.options.dropzoneForm3 = {
                maxFiles: 1,
                init: function () {
                    this.on("success", function (file) {

                        // Create the remove button
                        var removeButton = Dropzone.createElement("<button class='btn btn-danger'>Remove file</button>");

                        // Capture the Dropzone instance as closure.
                        var _this = this;
                        var filePath = arguments[1].FilePath;

                        // Listen to the click event
                        removeButton.addEventListener("click", function (e) {
                            // Make sure the button click doesn't submit the form:
                            e.preventDefault();
                            e.stopPropagation();
                            // Remove the file preview.
                            _this.removeFile(file);
                            // If you want to the delete the file on the server as well,
                            // you can do the AJAX request here.
                            $.ajax({
                                url: '@Url.Action("DeleteUploadedFile", "Upload", new {id = "admin"})',
                                type: 'POST',
                                data: {
                                    filePath: filePath
                                }
                            });
                        });

                        // Add the button to the file preview element.
                        file.previewElement.appendChild(removeButton);
                        $("#GuideBannerUrl").val(arguments[1].Message);
                    });
                }
            };
            Dropzone.options.dropzoneForm4 = {
                maxFiles: 1,
                init: function () {
                    this.on("success", function (file) {

                        // Create the remove button
                        var removeButton = Dropzone.createElement("<button class='btn btn-danger'>Remove file</button>");

                        // Capture the Dropzone instance as closure.
                        var _this = this;
                        var filePath = arguments[1].FilePath;

                        // Listen to the click event
                        removeButton.addEventListener("click", function (e) {
                            // Make sure the button click doesn't submit the form:
                            e.preventDefault();
                            e.stopPropagation();
                            // Remove the file preview.
                            _this.removeFile(file);
                            // If you want to the delete the file on the server as well,
                            // you can do the AJAX request here.
                            $.ajax({
                                url: '@Url.Action("DeleteUploadedFile", "Upload", new {id = "admin"})',
                                type: 'POST',
                                data: {
                                    filePath: filePath
                                }
                            });
                        });

                        // Add the button to the file preview element.
                        file.previewElement.appendChild(removeButton);
                        $("#EventBannerUrl").val(arguments[1].Message);
                    });
                }
            };

            Dropzone.options.dropzoneForm5 = {
                maxFiles: 1,
                init: function () {
                    this.on("success", function (file) {

                        // Create the remove button
                        var removeButton = Dropzone.createElement("<button class='btn btn-danger'>Remove file</button>");

                        // Capture the Dropzone instance as closure.
                        var _this = this;
                        var filePath = arguments[1].FilePath;

                        // Listen to the click event
                        removeButton.addEventListener("click", function (e) {
                            // Make sure the button click doesn't submit the form:
                            e.preventDefault();
                            e.stopPropagation();
                            // Remove the file preview.
                            _this.removeFile(file);
                            // If you want to the delete the file on the server as well,
                            // you can do the AJAX request here.
                            $.ajax({
                                url: '@Url.Action("DeleteUploadedFile", "Upload", new {id = "admin"})',
                                type: 'POST',
                                data: {
                                    filePath: filePath
                                }
                            });
                        });

                        // Add the button to the file preview element.
                        file.previewElement.appendChild(removeButton);
                        $("#MainBannerUrl1").val(arguments[1].Message);
                    });
                }
            };

            Dropzone.options.dropzoneForm6 = {
                maxFiles: 1,
                init: function () {
                    this.on("success", function (file) {

                        // Create the remove button
                        var removeButton = Dropzone.createElement("<button class='btn btn-danger'>Remove file</button>");

                        // Capture the Dropzone instance as closure.
                        var _this = this;
                        var filePath = arguments[1].FilePath;

                        // Listen to the click event
                        removeButton.addEventListener("click", function (e) {
                            // Make sure the button click doesn't submit the form:
                            e.preventDefault();
                            e.stopPropagation();
                            // Remove the file preview.
                            _this.removeFile(file);
                            // If you want to the delete the file on the server as well,
                            // you can do the AJAX request here.
                            $.ajax({
                                url: '@Url.Action("DeleteUploadedFile", "Upload", new {id = "admin"})',
                                type: 'POST',
                                data: {
                                    filePath: filePath
                                }
                            });
                        });

                        // Add the button to the file preview element.
                        file.previewElement.appendChild(removeButton);
                        $("#MainBannerUrl2").val(arguments[1].Message);
                    });
                }
            };

            Dropzone.options.dropzoneForm7 = {
                maxFiles: 1,
                init: function () {
                    this.on("success", function (file) {

                        // Create the remove button
                        var removeButton = Dropzone.createElement("<button class='btn btn-danger'>Remove file</button>");

                        // Capture the Dropzone instance as closure.
                        var _this = this;
                        var filePath = arguments[1].FilePath;

                        // Listen to the click event
                        removeButton.addEventListener("click", function (e) {
                            // Make sure the button click doesn't submit the form:
                            e.preventDefault();
                            e.stopPropagation();
                            // Remove the file preview.
                            _this.removeFile(file);
                            // If you want to the delete the file on the server as well,
                            // you can do the AJAX request here.
                            $.ajax({
                                url: '@Url.Action("DeleteUploadedFile", "Upload", new {id = "admin"})',
                                type: 'POST',
                                data: {
                                    filePath: filePath
                                }
                            });
                        });

                        // Add the button to the file preview element.
                        file.previewElement.appendChild(removeButton);
                        $("#MainBannerUrl3").val(arguments[1].Message);
                    });
                }
            };

            Dropzone.options.dropzoneForm8 = {
                maxFiles: 1,
                init: function () {
                    this.on("success", function (file) {

                        // Create the remove button
                        var removeButton = Dropzone.createElement("<button class='btn btn-danger'>Remove file</button>");

                        // Capture the Dropzone instance as closure.
                        var _this = this;
                        var filePath = arguments[1].FilePath;

                        // Listen to the click event
                        removeButton.addEventListener("click", function (e) {
                            // Make sure the button click doesn't submit the form:
                            e.preventDefault();
                            e.stopPropagation();
                            // Remove the file preview.
                            _this.removeFile(file);
                            // If you want to the delete the file on the server as well,
                            // you can do the AJAX request here.
                            $.ajax({
                                url: '@Url.Action("DeleteUploadedFile", "Upload", new {id = "admin"})',
                                type: 'POST',
                                data: {
                                    filePath: filePath
                                }
                            });
                        });

                        // Add the button to the file preview element.
                        file.previewElement.appendChild(removeButton);
                        $("#MainBannerUrl4").val(arguments[1].Message);
                    });
                }
            };
        });
    </script>
}




